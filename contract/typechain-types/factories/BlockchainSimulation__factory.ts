/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  BlockchainSimulation,
  BlockchainSimulationInterface,
} from "../BlockchainSimulation";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_transaction",
        type: "string",
      },
    ],
    name: "addTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "chain",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "previousHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "difficulty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mineBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "validateChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523461034157600260015560408051908181016001600160401b0381118382101761028657815260018252601f19810160005b81811061033057505080518082016001600160401b03811182821017610286578252600c81526b4f726967696e20426c6f636b60a01b602082015261007a83610346565b5261008482610346565b50805160c081016001600160401b038111828210176102865782526000815260208101428152828201938452606082016000815260808301906000825260a0840192600084526000546801000000000000000081101561028657600181018060005581101561031a5760008052600660206000209102019451855551600185015560028401955180519068010000000000000000821161028657875482895580831061029c575b50602001966000526020600020966000905b8282106101695750505090600592915160038501555160048401555191015551610abc90816103a58239f35b80518051906001600160401b038211610286576101868b54610353565b601f8111610249575b50602090601f83116001146101dc5792826001949360209386956000926101d1575b5050600019600383901b1c191690841b178c555b0199019101909761013d565b0151905038806101b1565b90601f198316918c600052816000209260005b8181106102315750936020936001969387969383889510610218575b505050811b018c556101c5565b015160001960f88460031b161c1916905538808061020b565b929360206001819287860151815501950193016101ef565b610276908c6000526020600020601f850160051c8101916020861061027c575b601f0160051c019061038d565b3861018f565b9091508190610269565b634e487b7160e01b600052604160045260246000fd5b8860005282602060002091820191015b8181106102b9575061012b565b806102c660019254610353565b806102d3575b50016102ac565b601f811183146102e95750600081555b386102cc565b610307908260005283601f6020600020920160051c8201910161038d565b80600052600060208120818355556102e3565b634e487b7160e01b600052603260045260246000fd5b806060602080938701015201610036565b600080fd5b80511561031a5760200190565b90600182811c92168015610383575b602083101461036d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610362565b818110610398575050565b6000815560010161038d56fe608080604052600436101561001357600080fd5b60003560e01c90816319cae4621461060d57508063517715f01461052b5780635852cc0c146104cc57806378a1ff8f146100a95780638f2bab071461008b5763fd778dd91461006157600080fd5b3461008657600036600319011261008657602061007c610924565b6040519015158152f35b600080fd5b34610086576000366003190112610086576020600054604051908152f35b3461008657600036600319011261008657600254156104875760005460001981018181116101dd576100e56100df608092610666565b506107f2565b0151604051906100f482610628565b828252602082014281526002549167ffffffffffffffff83116103b6576040519261012560208260051b0185610644565b808452600260009081527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9190602086015b8282106103e25750505050604084019283526060840190815260808401916000835260a08501956000875261018b866109b8565b600154908160021b9180830460041490151715809261010003916101008311915b6101dd57816101dd5780831c156101f35750895160001981146101dd576001018a526101d7896109b8565b836101ac565b634e487b7160e01b600052601160045260246000fd5b8752509597955050600160401b8110156103b6578060016102179201600055610666565b9590956103cc57518555516001850155600284019451805190600160401b82116103b6578654828855808310610338575b50602001956000526020600020956000905b82821061031b578660058787875160038501555160048401555191015560025460006002558061028657005b60026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace908101905b8181106102ba57005b806102c7600192546106a0565b806102d4575b50016102b1565b601f811183146102ea5750600081555b836102cd565b610308908260005283601f6020600020920160051c820191016106da565b80600052600060208120818355556102e4565b600160208261032c8394518c6106f1565b0198019101909661025a565b8760005282602060002091820191015b8181106103555750610248565b80610362600192546106a0565b8061036f575b5001610348565b601f811183146103855750600081555b8a610368565b6103a3908260005283601f6020600020920160051c820191016106da565b806000526000602081208183555561037f565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052600060045260246000fd5b604051600085546103f2816106a0565b8084529060018116908115610464575060011461042c575b506001928261041e85946020940382610644565b815201940191019092610157565b6000878152602081209092505b81831061044e5750508101602001600161040a565b6001816020925483868801015201920191610439565b60ff191660208581019190915291151560051b840190910191506001905061040a565b60405162461bcd60e51b815260206004820152601760248201527f4e6f207472616e73616374696f6e7320746f206d696e650000000000000000006044820152606490fd5b3461008657602036600319011261008657600435600054811015610086576104f560a091610666565b50805490600181015490600381015460056004830154920154926040519485526020850152604084015260608301526080820152f35b346100865760203660031901126100865760043567ffffffffffffffff8111610086573660238201121561008657806004013567ffffffffffffffff81116103b65760405191610585601f8301601f191660200184610644565b81835236602483830101116100865781600092602460209301838601378301015260025490600160401b8210156103b65760018201806002558210156105f7576105f59160026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace016106f1565b005b634e487b7160e01b600052603260045260246000fd5b34610086576000366003190112610086576020906001548152f35b60c0810190811067ffffffffffffffff8211176103b657604052565b90601f8019910116810190811067ffffffffffffffff8211176103b657604052565b6000548110156105f75760008080526006919091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630191565b90600182811c921680156106d0575b60208310146106ba57565b634e487b7160e01b600052602260045260246000fd5b91607f16916106af565b8181106106e5575050565b600081556001016106da565b919091825167ffffffffffffffff81116103b65761070f82546106a0565b601f81116107b5575b506020601f82116001146107535781929394600092610748575b50508160011b916000199060031b1c1916179055565b015190503880610732565b601f1982169083600052806000209160005b81811061079d57509583600195969710610784575b505050811b019055565b015160001960f88460031b161c1916905538808061077a565b9192602060018192868b015181550194019201610765565b6107e290836000526020600020601f840160051c810191602085106107e8575b601f0160051c01906106da565b38610718565b90915081906107d5565b906040516107ff81610628565b809280548252600181015460208301526002810180549067ffffffffffffffff82116103b6576040519161083960208260051b0184610644565b80835260208301916000526020600020916000905b82821061087f575050505060a091600591604085015260038101546060850152600481015460808501520154910152565b6040516000855461088f816106a0565b808452906001811690811561090157506001146108c9575b50600192826108bb85946020940382610644565b81520194019101909261084e565b6000878152602081209092505b8183106108eb575050810160200160016108a7565b60018160209254838688010152019201916108d6565b60ff191660208581019190915291151560051b84019091019150600190506108a7565b60005460015b818110610938575050600190565b6109446100df82610666565b60001982018281116101dd576100df61095c91610666565b608060608301519101510361098d576109796080820151916109b8565b036109865760010161092a565b5050600090565b505050600090565b60005b8381106109a85750506000910152565b8181015183820152602001610998565b90600060605b60408401518051831015610a235790610a1b60206001938560051b01015191602060405193826109f78694518092858088019101610995565b8301610a0b82518093858085019101610995565b010103601f198101835282610644565b9101906109be565b509050919091610a806040606084519460208101519060a083820151910151845196879360208501998a5286850152610a658151809260208888019101610995565b83019184830152608082015203016020810184520182610644565b5190209056fea2646970667358221220647e95938ee7b71a9a537a60ecbe08b86de8047b1064040d7425a19b1fbc3bea64736f6c634300081c0033";

type BlockchainSimulationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockchainSimulationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockchainSimulation__factory extends ContractFactory {
  constructor(...args: BlockchainSimulationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BlockchainSimulation & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BlockchainSimulation__factory {
    return super.connect(runner) as BlockchainSimulation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockchainSimulationInterface {
    return new Interface(_abi) as BlockchainSimulationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BlockchainSimulation {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BlockchainSimulation;
  }
}
